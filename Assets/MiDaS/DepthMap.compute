// Copyright (c) 2025 Yupopyoi
//
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.

#pragma kernel CSMain

// Buffers
StructuredBuffer<float> DepthInput;
RWStructuredBuffer<float> ColorOutput;

// Parameters
uint InputDataNum;
float MinDepth;
float MaxDepth;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{   
    uint2 pixelCoord = id.xy;

    uint index = pixelCoord.y * 384 + pixelCoord.x;

    // Normalisation of depth values (scaled from 0.0 to 1.0)
    float depth = DepthInput[index];
    float normalizedDepth = saturate((depth - MinDepth) / (MaxDepth - MinDepth));

    // Mapping Colors
    float red = normalizedDepth;
    float blue = 1.0 - normalizedDepth;
    ColorOutput[InputDataNum * 0 + index] = red;
    ColorOutput[InputDataNum * 1 + index] = 0.0f; // Green
    ColorOutput[InputDataNum * 2 + index] = blue;
    ColorOutput[InputDataNum * 3 + index] = 1.0f; // Alpha
}
